<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Data" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="System.Data" #>
<#@ import namespace="Microsoft.VisualStudio.TextTemplating" #>
<#@ assembly name="$(SolutionDir)\..\Build\ApiGenerator.Utility.dll" #>
<#@ import namespace="ApiGenerator.Utility" #>
<#
    
    var engine = new Engine();
    var session = new TextTemplatingSession();
    var templates = Host.ResolveAssemblyReference("$(ProjectDir)");

    var output = Settings.OutputDirectory;
    var platform = Settings.PlatformName;;
    
    var schemaName = "dbo";
    var tableName  = "BInventorySnapshotIndex";
    var entityName = "BInventorySnapshotIndex";

    var database = new Database();
    var table = database.GetTable(schemaName, tableName);

    var columns = new List<DataColumn>();
    foreach (DataColumn column in table.Columns)
        columns.Add(column);
    columns.Sort(new Database.EntityColumnComparer());

#>
public class <#= entityName #>
{
<#
string lasttype = null;

for (int i = 0; i < columns.Count; i++) 
{ 
    var column = columns[i];
    var typeName = Database.TypeNameOrAlias(column.DataType);
    var datatype = typeName;
    
    if (column.AllowDBNull && datatype != "string")
        datatype += "?";
    
    if (i > 0 && lasttype != typeName)
        WriteLine("");
    
    Write("    public " + datatype + " " + column.ColumnName + " { get; set; }");
        
    WriteLine("");
    
    lasttype = typeName;
}
#>
}